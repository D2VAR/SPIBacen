## Banco de Dados DynamoDB
aws:
  access:
    key:
      id: idAWSDynamoDB
      secret: secretAWSDynamoDB
dynamodb:
  service:
    region: us-east-1
    endpoint: http://dynamodb:4566

  index:
    chave-pix: ChavePix-index

## KAFKA
topic:
  name:
    retorno:
      cadastro:
        success: topico-retorno-cadastro-chave-pix-ok
        fail: topico-retorno-cadastro-chave-pix-falha
    envio:
      cadastro: topico-envio-cadastro-chave-pix
    recebedor:
      envio:
        pix: topico-recebedor-envio-transacao-pix
      retorno:
        success: topico-recebedor-retorno-transacao-pix-ok
        fail: topico-recebedor-retorno-transacao-pix-falha
    pagador:
      envio:
        pix: topico-pagador-envio-transacao-pix
      retorno:
        success: topico-pagador-retorno-transacao-pix-ok
        fail: topico-pagador-retorno-transacao-pix-falha
    resultado:
      success: topico-fim-transacao-pix-ok
      fail: topico-fim-transacao-pix-falha




## Kafka Producer
spring:
  kafka:
    producer:
      bootstrap-servers: http://kafka:29092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
## Kafka Consumer
    consumer:
      group-id: group-bacen
      bootstrap-servers: http://kafka:29092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: false
      properties:
        spring:
          json:
            trusted:
              packages: "*"
    listener:
      ack-mode: MANUAL